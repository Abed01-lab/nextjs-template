name: Master

on:
  push:
    branches:
      - main

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: |
          npm ci --include=dev
          npm i -g pm2
          npx playwright install --with-deps

      - name: Set Secrets
        run: |
          echo DB_HOST=localhost >> .env
          echo DB_PORT=5432 >> .env
          echo DB_USER=postgres >> .env
          echo DB_PASSWORD=example >> .env
          echo DB_DATABASE=postgres >> .env
          echo AUTH_SECRET=${{secrets.AUTH_SECRET_TEST}} >> .env
          echo AUTH_GITHUB_ID=${{secrets.AUTH_GITHUB_ID_TEST}} >> .env
          echo AUTH_GITHUB_SECRET=${{secrets.AUTH_GITHUB_SECRET_TEST}} >> .env
          echo AUTH_GOOGLE_ID=${{secrets.AUTH_GOOGLE_ID_TEST}} >> .env
          echo AUTH_GOOGLE_SECRET=${{secrets.AUTH_GOOGLE_SECRET_TEST}} >> .env

      - name: Run migrations
        run: npx ternat migrate

      - name: Build project
        run: npm run build

      - name: Run project
        run: pm2 start npm --name "test_project" -- start

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  tag:
    runs-on: ubuntu-latest
    name: 'Creating a tag'
    needs: migration
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci --include=dev

      - name: Create a new version and release
        id: release
        run: |
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # Token to create a release

  migration:
    runs-on: ubuntu-latest
    name: 'Running database migration'
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci --include=dev

      - name: Set Secrets
        run: |
          echo DB_HOST=${{secrets.DB_HOST}} >> .env
          echo DB_PORT=${{secrets.DB_PORT}} >> .env
          echo DB_USER=${{secrets.DB_USER}} >> .env
          echo DB_PASSWORD=${{secrets.DB_PASSWORD}} >> .env
          echo DB_DATABASE=${{secrets.DB_DATABASE}} >> .env
          echo AUTH_SECRET=${{secrets.AUTH_SECRET_TEST}} >> .env
          echo AUTH_GITHUB_ID=${{secrets.AUTH_GITHUB_ID_TEST}} >> .env
          echo AUTH_GITHUB_SECRET=${{secrets.AUTH_GITHUB_SECRET_TEST}} >> .env
          echo AUTH_GOOGLE_ID=${{secrets.AUTH_GOOGLE_ID_TEST}} >> .env
          echo AUTH_GOOGLE_SECRET=${{secrets.AUTH_GOOGLE_SECRET_TEST}} >> .env

      - name: Run migration
        run: npx ternat migrate
